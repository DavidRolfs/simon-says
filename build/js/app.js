!function r(o,e,t){function n(i,a){if(!e[i]){if(!o[i]){var u="function"==typeof require&&require;if(!a&&u)return u(i,!0);if(s)return s(i,!0);var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}var A=e[i]={exports:{}};o[i][0].call(A.exports,function(r){var e=o[i][1][r];return n(e||r)},A,A.exports,r,o,e,t)}return e[i].exports}for(var s="function"==typeof require&&require,i=0;i<t.length;i++)n(t[i]);return n}({1:[function(r,o,e){function t(){this.sourceArray=["red","blue","yellow","green"],this.answerArray=[],this.userArray=[],this.timer=null}t.prototype.AddColorToAnswerArray=function(){var r=Math.floor(4*Math.random());this.answerArray.push(this.sourceArray[r]),console.log(this.answerArray)},t.prototype.CheckColor=function(){for(var r=0;r<this.answerArray.length;r++){if(this.answerArray[r]==this.userArray[r]&&r==this.answerArray.length-1)return console.log("Correct Answer, adding Color"),this.AddColorToAnswerArray(),void(this.userArray=[]);if(this.answerArray[r]!=this.userArray[r])return console.log("Incorrect. Game Restart."),this.answerArray=[],this.userArray=[],void this.AddColorToAnswerArray();console.log("Correct Answer")}},t.prototype.AddColorToUserArray=function(r){this.userArray.push(r);var o=this;clearTimeout(this.timer),this.timer=setTimeout(function(){o.CheckColor()},2e3)},e.simonModule=t},{}],2:[function(r,o,e){var t=r("./../js/simon.js").simonModule;$(document).ready(function(){var r=new t;r.AddColorToAnswerArray();for(var o=0;o<r.answerArray.length;o++)$("#output").text(r.answerArray[o]),setInterval(function(){$("#output").text(r.answerArray[o])},1e3);$(".button").click(function(o){o.preventDefault();var e=$(this)[0].classList[1];console.log($(this)[0].classList[1]),r.AddColorToUserArray(e)})})},{"./../js/simon.js":1}]},{},[2]);